name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: Code format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Format
        run: cargo fmt --verbose --check

  build:
    name: Build for ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: cargo build --verbose

      - name: Lint
        run: cargo clippy --verbose --no-deps

      - name: Test
        run: cargo test --verbose

      - name: Docs
        run: cargo doc --verbose --no-deps

  build-diesel-feature:
    name: Build with diesel feature
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: cargo build --verbose --features diesel

      - name: Lint
        run: cargo clippy --verbose --features diesel --no-deps

      - name: Test
        run: cargo test --verbose --features diesel

      - name: Docs
        run: cargo doc --verbose --features diesel --no-deps

  diesel:
    name: Diesel schema
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup mysql
        run: sudo systemctl start mysql.service

      # Cache .cargo to avoid installing dioxus-cli
      - name: Diesel cli cache
        id: cache-diesel-cli
        uses: actions/cache@v3
        env:
          cache-name: cache-diesel-cli
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-diesel

      # Install diesel cli if cache misses
      - name: Diesel cli install
        if: ${{ steps.cache-diesel-cli.outputs.cache-hit != 'true' }}
        run: |
          sudo apt-get install -y libmysqlclient-dev
          cargo install diesel_cli --no-default-features --features mysql

      - name: Generate schema
        run: diesel setup --database-url mysql://root:root@127.0.0.1/diesel_demo

        # Checks for changed files
      - run: test ! "$(git status --porcelain)"
